-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Swapi.Union.CharacterUnion exposing (selection)

import Graphql.Field as Field exposing (Field)
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (FragmentSelectionSet(..), SelectionSet(..))
import Json.Decode as Decode
import Swapi.InputObject
import Swapi.Interface
import Swapi.Object
import Swapi.Scalar
import Swapi.Union


type alias Fragments decodesTo =
    { onDroid : SelectionSet decodesTo Swapi.Object.Droid
    , onHuman : SelectionSet decodesTo Swapi.Object.Human
    }


maybeFragments : Fragments (Maybe a)
maybeFragments =
    { onDroid = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onHuman = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    }


{-| Complete selection
-}
selection :
    { onDroid : SelectionSet decodesTo Swapi.Object.Droid
    , onHuman : SelectionSet decodesTo Swapi.Object.Human
    }
    -> SelectionSet decodesTo Swapi.Union.CharacterUnion
selection selections =
    Object.exhuastiveFragmentSelection
        [ Object.buildFragment "Droid" selections.onDroid
        , Object.buildFragment "Human" selections.onHuman
        ]
